{"version":3,"sources":["redux/authentication/authenticationConstants.js","redux/authentication/authenticationActions.js","screens/Login/index.js","screens/SignUp.js","components/FeedbackItem/index.js","components/Feedbacks/index.js","redux/feedback/feedbackConstants.js","redux/feedback/feedbackActions.js","components/FeedbackForm/index.js","routes/RouteManager.js","routes/PrivateRoute.js","routes/AllRoutes.js","redux/feedback/feedbackReducer.js","redux/authentication/authenticationReducer.js","redux/rootReducer.js","redux/store.js","App.js","index.js"],"names":["AUTHENTICATE","authenticate","type","action","payload","email","withRouter","connect","dispatch","authenticatedUser","props","useDispatch","useState","login","setLogin","error","setError","handleLoginChange","event","target","name","password","value","className","onSubmit","preventDefault","Object","keys","length","history","push","console","log","placeholder","onChange","to","signUp","setSignUp","handleChange","htmlFor","FeedbackItem","feedback","comment","state","feedbacks","map","idx","ADD_FEEDBACK","addFeedback","actions","data","setFeedback","handleInputChange","rows","RouteManager","path","exact","component","Login","SignUp","Feedbacks","FeedbackForm","authentication","isAuthenticated","AllRoutes","INITIAL_STATE","combineReducers","createStore","rootReducer","composeWithDevTools","App","store","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7d275091.chunk.js","sourcesContent":["export const AUTHENTICATE = \"AUTHENTICATE\";\n","import * as action from \"./authenticationConstants\";\n\nexport const authenticate = (authenticate) => {\n  return {\n    type: action.AUTHENTICATE,\n    payload: {\n      email: authenticate.email\n    }\n  };\n};\n","import { Link, withRouter } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { authenticate } from \"../../redux/authentication/authenticationActions\";\nimport \"./Login.css\";\nimport { useState } from \"react\";\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n  const [login, setLogin] = useState({});\n  const [error, setError] = useState(null);\n\n  const handleLoginChange = (event) => {\n    const { name, password } = event.target;\n    setLogin({\n      ...login,\n      [name]: event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      login.email === \"\" ||\n      login.password === \"\" ||\n      Object.keys(login).length === 0\n    ) {\n      setError(`Invalid e-mail or password`);\n    } else {\n      dispatch(authenticate(login));\n      props.history.push(\"/\");\n    }\n    console.log(login);\n  };\n\n  return (\n    <div className=\"login col-12 col-md-4 offset-md-4 mt-4\">\n      <h3 className=\"login-title\">Login</h3>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          className=\"form-control\"\n          placeholder=\"@ e-mail\"\n          onChange={handleLoginChange}\n        />\n\n        <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"form-control\"\n          placeholder=\"@ password\"\n          onChange={handleLoginChange}\n        />\n\n        <br />\n        <br />\n        <button className=\"submit btn btn-primary form-control\" type=\"submit\">\n          Login\n        </button>\n      </form>\n\n      <Link to=\"/signup\" className=\"login-link\">\n        Don't have an account? Sign Up\n      </Link>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authenticate: (authenticatedUser) => dispatch(authenticate(authenticatedUser))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\n","import { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { authenticate } from \"../redux/authentication/authenticationActions\";\n\nconst SignUp = (props) => {\n  const dispatch = useDispatch();\n  const [signUp, setSignUp] = useState({});\n  const [error, setError] = useState([]);\n\n  const handleChange = (event) => {\n    const { name, password } = event.target;\n    setSignUp({\n      ...signUp,\n      [name]: event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      signUp.email === \"\" ||\n      signUp.password === \"\" ||\n      Object.keys(signUp).length === 0\n    ) {\n      setError(`Invalid e-mail or password`);\n    } else {\n      dispatch(authenticate(signUp));\n      props.history.push(\"/\");\n    }\n  };\n\n  return (\n    <div className=\"login col-12 col-md-4 offset-md-4 mt-4\">\n      <h1>Sign Up</h1>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          className=\"form-control\"\n          placeholder=\"@ e-mail\"\n          onChange={handleChange}\n        />\n\n        <br />\n\n        <label htmlFor=\"email\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"form-control\"\n          placeholder=\"@ password\"\n          onChange={handleChange}\n        />\n\n        <br />\n        <br />\n        <button className=\"submit btn btn-primary form-control\" type=\"submit\">\n          SignUp\n        </button>\n      </form>\n\n      <Link to=\"/login\">Already have an account? Login</Link>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authenticate: (authenticatedUser) => dispatch(authenticate(authenticatedUser))\n});\n\nexport default withRouter(connect(mapDispatchToProps)(SignUp));\n","import \"./FeedbackItem.css\";\n\nconst FeedbackItem = ({ feedback }) => {\n  return (\n    <div className=\"feedback-item\">\n      <p className=\"feedback-item-comment\">{feedback.comment}</p>\n      <p className=\"feedback-item-submitter-detail\">\n        Posted by <b>{feedback.name}</b> and email <b>{feedback.email}</b>\n      </p>\n    </div>\n  );\n};\n\nexport default FeedbackItem;\n","import { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport FeedbackItem from \"../FeedbackItem\";\nimport \"./Feedbacks.css\";\n\nconst Feedbacks = ({ feedbacks }) => {\n  return (\n    <div className=\"feedbacks mt-4\">\n      <h1 className=\"feedbacks-title\">Feedbacks</h1>\n      {feedbacks.map((feedback, idx) => (\n        <FeedbackItem key={idx} feedback={feedback} />\n      ))}\n\n      <div className=\"add-a-feedback\">\n        <Link to=\"/feedbacks/new\">\n          <button className=\"btn btn-primary\">+ POST A FEEDBACK</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  feedbacks: state.feedbacks\n});\nexport default connect(mapStateToProps)(Feedbacks);\n","export const ADD_FEEDBACK = \"ADD_FEEDBACK\";\nexport const REMOVE_FEEDBACK = \"REMOVE_FEEDBACK\";\n","import * as actions from \"./feedbackConstants\";\n\nexport const addFeedback = (feedback) => {\n  return {\n    type: actions.ADD_FEEDBACK,\n    payload: {\n      name: feedback.name,\n      email: feedback.email,\n      comment: feedback.comment\n    }\n  };\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addFeedback } from \"../../redux/feedback/feedbackActions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./FeedbackForm.css\";\n\nconst FeedBackForm = (props) => {\n  const dispatch = useDispatch();\n\n  const [feedback, setFeedback] = useState({});\n\n  const handleInputChange = (event) => {\n    const { name, email, comment } = event.target;\n    setFeedback({\n      ...feedback,\n      [name]: event.target.value\n    });\n    console.log(feedback);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(addFeedback(feedback));\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"col-12 col-md-6 offset-md-3 mt-4\">\n      <div className=\"feedback-form\">\n        <h2 className=\"feedback-form-heading\">Feedback Form</h2>\n        <form className=\"form-wrap\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"form-control\"\n            placeholder=\"@ username\"\n            onChange={handleInputChange}\n          />\n\n          <br />\n\n          <input\n            type=\"text\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"@ e-mail\"\n            onChange={handleInputChange}\n          />\n\n          <br />\n\n          <textarea\n            name=\"comment\"\n            className=\"form-control\"\n            rows=\"4\"\n            placeholder=\"@ comment\"\n            onChange={handleInputChange}\n          />\n\n          <br />\n          <br />\n          <button className=\"submit btn btn-primary\" type=\"submit\">\n            SUBMIT\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addFeedback: (data) => dispatch(addFeedback(data))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(FeedBackForm));\n","import { Route } from \"react-router-dom\";\nimport FeedbackForm from \"../components/FeedbackForm\";\nimport Feedbacks from \"../components/Feedbacks\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Login from \"../screens/Login\";\nimport SignUp from \"../screens/SignUp\";\n\nconst RouteManager = () => {\n  return (\n    <>\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/signup\" exact component={SignUp} />\n      <Route path=\"/\" exact component={Feedbacks} />\n      <Route path=\"/feedbacks/new\" exact component={FeedbackForm} />\n    </>\n  );\n};\n\nexport default RouteManager;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Feedbacks from \"../components/Feedbacks\";\nimport Login from \"../screens/Login\";\nimport RouteManager from \"./RouteManager\";\n\nconst PrivateRoute = ({ authentication }) => {\n  const isAuthenticated = authentication === \"\" ? false : true;\n  return (\n    <>\n      {isAuthenticated && <RouteManager />}\n      {!isAuthenticated && <Redirect to=\"/login\" />}\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  authentication: state.authentication.email\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route } from \"react-router-dom\";\nimport Login from \"../screens/Login\";\nimport SignUp from \"../screens/SignUp\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst AllRoutes = () => {\n  return (\n    <>\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/signup\" exact component={SignUp} />\n      <PrivateRoute />\n    </>\n  );\n};\n\nexport default AllRoutes;\n","import * as actions from \"./feedbackConstants\";\n\nconst INITIAL_STATE = [\n  {\n    name: \"Ritumoni Sharma\",\n    email: \"riturathinsharma@gmail.com\",\n    comment:\n      \"Hello React-Redux. Fun framework with a fun storage system for cool apps\"\n  },\n\n  {\n    name: \"Irina Sharma\",\n    email: \"irinasharma@gmail.com\",\n    comment: \"Redux is a store management system with awesome features\"\n  }\n];\n\nexport default function (state = INITIAL_STATE, { type, payload }) {\n  switch (type) {\n    case actions.ADD_FEEDBACK:\n      return [...state, payload];\n    default:\n      return state;\n  }\n}\n","import * as action from \"./authenticationConstants\";\n\nconst INITIAL_STATE = {\n  email: \"\"\n};\n\nexport default function (state = INITIAL_STATE, { type, payload }) {\n  switch (type) {\n    case action.AUTHENTICATE:\n      const email = payload.email;\n      console.log(email);\n      return {\n        ...state,\n        email\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport feedbackReducer from \"./feedback/feedbackReducer\";\nimport authenticationReducer from \"./authentication/authenticationReducer\";\nexport default combineReducers({\n  feedbacks: feedbackReducer,\n  authentication: authenticationReducer\n});\n","import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nexport default createStore(rootReducer, composeWithDevTools());\n","import { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AllRoutes from \"./routes/AllRoutes\";\nimport store from \"./redux/store\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App container\">\n          <AllRoutes />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}